-- MySQL Script generated by MySQL Workbench
-- 22 ديس, 2015 EET 10:12:10 م
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbproject
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dbproject
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbproject` DEFAULT CHARACTER SET utf8 ;
USE `dbproject` ;

-- -----------------------------------------------------
-- Table `dbproject`.`college`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`college` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `address` VARCHAR(255) NOT NULL,
  `dean_id` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`employee` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `address` VARCHAR(255) NOT NULL,
  `salary` INT(11) NOT NULL,
  `employee_type` TINYINT(2) NOT NULL COMMENT '0=>prof\n1=>TA',
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`department` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `college_id` INT(11) NOT NULL,
  `department_head_id` INT(11) NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `address` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`, `college_id`),
  INDEX `fk_department_college_idx` (`college_id` ASC),
  INDEX `fk_department_employee1_idx` (`department_head_id` ASC),
  CONSTRAINT `fk_department_college`
    FOREIGN KEY (`college_id`)
    REFERENCES `dbproject`.`college` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_department_employee1`
    FOREIGN KEY (`department_head_id`)
    REFERENCES `dbproject`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`course` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `prof_id` INT(11) NULL,
  `ta_id` INT(11) NULL,
  `name` VARCHAR(64) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_course_employee1_idx` (`prof_id` ASC),
  INDEX `fk_course_employee2_idx` (`ta_id` ASC),
  CONSTRAINT `fk_course_employee1`
    FOREIGN KEY (`prof_id`)
    REFERENCES `dbproject`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_employee2`
    FOREIGN KEY (`ta_id`)
    REFERENCES `dbproject`.`employee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`student` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `department_id` INT(11) NOT NULL,
  `name` VARCHAR(64) NOT NULL,
  `email` VARCHAR(32) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `address` VARCHAR(255) NOT NULL,
  `year` VARCHAR(32) NOT NULL,
  `is_grad` TINYINT(2) NOT NULL COMMENT '0=> STUDENT\n1=> GRAD',
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_student_department1_idx` (`department_id` ASC),
  CONSTRAINT `fk_student_department1`
    FOREIGN KEY (`department_id`)
    REFERENCES `dbproject`.`department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`course_prerequisite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`course_prerequisite` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `course_id` INT(11) NOT NULL,
  `prerequisited_course` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `course_id`, `prerequisited_course`),
  INDEX `fk_course_prerequisite_course1_idx` (`course_id` ASC),
  INDEX `fk_course_prerequisite_course2_idx` (`prerequisited_course` ASC),
  CONSTRAINT `fk_course_prerequisite_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `dbproject`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_prerequisite_course2`
    FOREIGN KEY (`prerequisited_course`)
    REFERENCES `dbproject`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`student_course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`student_course` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `student_id` INT(11) NOT NULL,
  `course_id` INT(11) NOT NULL,
  `year` VARCHAR(32) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `course_id`, `student_id`),
  INDEX `fk_student_course_student1_idx` (`student_id` ASC),
  INDEX `fk_student_course_course1_idx` (`course_id` ASC),
  CONSTRAINT `fk_student_course_student1`
    FOREIGN KEY (`student_id`)
    REFERENCES `dbproject`.`student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_student_course_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `dbproject`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`student_degree`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`student_degree` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `year` VARCHAR(32) NOT NULL,
  `student_id` INT(11) NOT NULL,
  `year_degree` INT(11) NOT NULL,
  `accumulative_degree` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `student_id`),
  INDEX `fk_student_degree_student1_idx` (`student_id` ASC),
  CONSTRAINT `fk_student_degree_student1`
    FOREIGN KEY (`student_id`)
    REFERENCES `dbproject`.`student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbproject`.`student_phone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dbproject`.`student_phone` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `student_id` INT(11) NOT NULL,
  `phone` VARCHAR(12) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `student_id`),
  INDEX `fk_student_phone_student1_idx` (`student_id` ASC),
  CONSTRAINT `fk_student_phone_student1`
    FOREIGN KEY (`student_id`)
    REFERENCES `dbproject`.`student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
